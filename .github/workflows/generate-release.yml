name: Generate release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_TERM_COLOR: always

jobs:
  upload-release:

    runs-on: ubuntu-latest
    needs: [build-macos, build-linux, build-windows]

    steps:
    - uses: actions/checkout@v1
    - name: create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false   
        
    - name: download artifacts
      uses: actions/download-artifact@v1
      with:
        name: uploads    
        
    - name: upload macos
      id: upload-macos 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/biquinho-macos.zip
        asset_name: biquinho-macos.zip
        asset_content_type: application/zip  
        
    - name: upload linux
      id: upload-linux
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/biquinho-linux.zip
        asset_name: biquinho-linux.zip
        asset_content_type: application/zip   
        
    - name: upload windows
      id: upload-windows
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/biquinho-windows.zip
        asset_name: biquinho-windows.zip
        asset_content_type: application/zip


  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release 
    - name: List target/release
      run: ls target/release
    - name: zip macos artifact
    #        mv target/release/libbevy_dylib.dylib libbevy_dylib.dylib
      run: |
        mv target/release/biquinho biquinho
        zip -r biquinho-macos target/release/biquinho biquinho assets/
        
    - name: upload macos artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: biquinho-macos.zip
        
    
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Bevy dependencies
      run: sudo apt-get update; sudo apt-get install --no-install-recommends -yq libasound2-dev libudev-dev;
      
    - name: install RFD dependencies
      run: sudo apt-get update; sudo apt-get install -yq libgtk-3-dev
      
    - name: Build
      run: cargo build --release 
      
    - name: zip linux artifact
    #mv target/release/libbevy_dylib.so libbevy_dylib.so
      run: |
        mv target/release/biquinho biquinho
        zip -r biquinho-linux biquinho assets/
        
    - name: upload macos artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: biquinho-linux.zip

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release 
    
    - name: List target/release
      run: dir target\release
      
    - name: zip win artifact
    #        powershell Compress-Archive -Path .\target\release\bevy_dylib.dll -Update -DestinationPath biquinho-windows.zip 
      run: |
        powershell Compress-Archive .\target\release\biquinho.exe biquinho-windows.zip 
        powershell Compress-Archive -Path .\assets  -Update -DestinationPath biquinho-windows.zip 
        
    - name: upload windows artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: biquinho-windows.zip
      
      
